/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_pixnpunk_jni_QSLibSNX */

#ifndef _Included_com_pixnpunk_jni_QSLibSNX
#define _Included_com_pixnpunk_jni_QSLibSNX
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_pixnpunk_jni_QSLibSNX_init
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    terminate
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_pixnpunk_jni_QSLibSNX_terminate
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    enableDebugMode
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_pixnpunk_jni_QSLibSNX_enableDebugMode
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getCurStateData
 * Signature: ()Lcom/pixnpunk/jni/QSLibSNX$ExecutionState;
 */
JNIEXPORT jobject JNICALL Java_com_pixnpunk_jni_QSLibSNX_getCurStateData
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getFullRefreshCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_pixnpunk_jni_QSLibSNX_getFullRefreshCount
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getQstFullPath
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getQstFullPath
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getCurLoc
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getCurLoc
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getExprValue
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_pixnpunk_jni_QSLibSNX_getExprValue
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getVersion
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getCompiledDateTime
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getCompiledDateTime
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    isInCallBack
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_isInCallBack
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getMainDesc
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getMainDesc
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    isMainDescChanged
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_isMainDescChanged
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getVarsDesc
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getVarsDesc
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    isVarsDescChanged
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_isVarsDescChanged
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getVarValuesCount
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_pixnpunk_jni_QSLibSNX_getVarValuesCount
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getVarValues
 * Signature: (Ljava/lang/String;I)Lcom/pixnpunk/jni/QSLibSNX$VarValResp;
 */
JNIEXPORT jobject JNICALL Java_com_pixnpunk_jni_QSLibSNX_getVarValues
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getMaxVarsCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_pixnpunk_jni_QSLibSNX_getMaxVarsCount
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getVarNameByIndex
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_pixnpunk_jni_QSLibSNX_getVarNameByIndex
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    setInputStrText
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_pixnpunk_jni_QSLibSNX_setInputStrText
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getActions
 * Signature: ()[Lcom/pixnpunk/jni/QSLibSNX$ListItem;
 */
JNIEXPORT jobjectArray JNICALL Java_com_pixnpunk_jni_QSLibSNX_getActions
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    isActionsChanged
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_isActionsChanged
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    executeSelActionCode
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_executeSelActionCode
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getSelActionIndex
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_pixnpunk_jni_QSLibSNX_getSelActionIndex
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    setSelActionIndex
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_setSelActionIndex
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getObjects
 * Signature: ()[Lcom/pixnpunk/jni/QSLibSNX$ListItem;
 */
JNIEXPORT jobjectArray JNICALL Java_com_pixnpunk_jni_QSLibSNX_getObjects
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    isObjectsChanged
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_isObjectsChanged
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getSelObjectIndex
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_pixnpunk_jni_QSLibSNX_getSelObjectIndex
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    setSelObjectIndex
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_setSelObjectIndex
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    execString
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_execString
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    execLocationCode
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_execLocationCode
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    execCounter
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_execCounter
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    execUserInput
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_execUserInput
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getLastErrorData
 * Signature: ()Lcom/pixnpunk/jni/QSLibSNX$ErrorData;
 */
JNIEXPORT jobject JNICALL Java_com_pixnpunk_jni_QSLibSNX_getLastErrorData
  (JNIEnv *, jobject);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    getErrorDesc
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_pixnpunk_jni_QSLibSNX_getErrorDesc
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    loadGameWorldFromData
 * Signature: ([BLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_loadGameWorldFromData
  (JNIEnv *, jobject, jbyteArray, jstring);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    loadGameWorldFromFD
 * Signature: (Ljava/io/FileDescriptor;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_loadGameWorldFromFD
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    saveGameAsData
 * Signature: (Z)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_pixnpunk_jni_QSLibSNX_saveGameAsData
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    saveGameByFD
 * Signature: (Ljava/io/FileDescriptor;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_saveGameByFD
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    openSavedGameFromData
 * Signature: ([BZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_openSavedGameFromData
  (JNIEnv *, jobject, jbyteArray, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    openSavedGameFromFD
 * Signature: (Ljava/io/FileDescriptor;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_openSavedGameFromFD
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    restartGame
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_pixnpunk_jni_QSLibSNX_restartGame
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_pixnpunk_jni_QSLibSNX
 * Method:    selectMenuItem
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_pixnpunk_jni_QSLibSNX_selectMenuItem
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
